Ответы на вопросы
-----------------

1.  Вопрос: Чем, по-вашему, Python превосходит остальные языки программирования? Для каких задач он подходит лучше всего? Для чего он не подходит?
    Ответ:  Стороны в которых Python превосходит остальные языки программирования:
                легкость в изучении
                чистый синтаксис
                универсальность(используют в многих областях программирования и смежных областях)
            Слабые стороны:
                медленный интерпретатор

2.  Вопрос: Какие особенности Python вам доставляют больше всего неудобств?
    Ответ: В данный момент получаю одно удовольствие от разработки на python

3.  Вопрос: Возможно ли писать программы на Python в функциональном стиле? Насколько он
для этого подходит?
    Ответ: Python хорошо подходит для программирования в функциональном стиле, т.к. поддерживает большую часть характеристик функционального программирования. Функция в Python является вызываемым объектом который можно присваивать в переменных, передавать в аргументах и возвращать другими функциями. Некоторые паттерны проектирования существуют на уровне синтаксиса, т.к. декораторы.

4.  Вопрос: Какие инструменты и методы помогают вам экономить время и избегать ошибок при
написании кода?
    Ответ: IDE Pycharm с подсветкой кода и автодополнением помогает избегать ошибок, плагин IdeaVim позволяющий редактировать текст как в редакторе Vim дает мне прирост скорости написании и редактирования кода. Также я использую Janki-метод для надежного закрепления новых знаний.

5.  Вопрос: На каких ресурсах вы получаете информацию и новости по используемым технологиям?
    Ответ: Сайты youtube.com, habr.com, stackoverflow.com. Также много читаю технических книг издательства o'reilly(цикл книг с животными на обложке)

6.  Вопрос: Расскажите нам о себе и о ваших последних работах (в рамках допустимого).
    Ответ: Сейчас т.к. нахожусь в поиске работы много времени уходит на выполнение тестовых задач на Python. Если задания заканчиваются, работаю над домашнем проектом который так же находится в данном репозитории physics


Практическое задание
--------------------

Реализуйте web-приложение для простого учета посещенных (неважно, как, кем и когда)
ссылок. Приложение должно удовлетворять следующим требованиям:
1.  Приложение написано на языке Python версии ~> 3.7.
2.  Приложение предоставляет JSON API по HTTP
3.  Приложение предоставляет два HTTP ресурса. Ресурс загрузки посещений:
    1. POST /visited_links
    2. GET /visited_domains  
4.  Первый ресурс служит для передачи в сервис массива ссылок в POST-запросе. Временем их посещения считается время получения запроса сервисом
5.  Второй ресурс служит для получения GET-запросом списка уникальных доменов,
посещенных за переданный интервал времени.
6.  Поле status ответа служит для передачи любых возникающих при обработке запроса
ошибок.
7.  Для хранения данных сервис должен использовать БД Redis
8.  Код должен быть покрыт тестами
9.  Инструкции по запуску должны находиться в файле README.


Инструкции для запуска проекта
------------------------------

1.  Создать виртуальное окружение ``mkvirtualenv --python=python3.7 funbox``
2.  Установить необходимые модули ``pip3 install django djangorestframework redis``
3.  Запустить тестовый сервер django ``python3 manage.py runserver`` (необходимо быть в директории где располагается фаил manage.py)
4.  Команды тестирования приложения запускаются следующей командой ``python3 manage.py test api`` (необходимо быть в директории где располагается фаил manage.py)

